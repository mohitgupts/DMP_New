//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DmpModel", "FK_DealerDealerManpower", "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Dealer), "DealerManpower", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.DealerManpower), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "FK_ProductProductVarient", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Product), "ProductVarient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.ProductVarient), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "FK_RegionState", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Region), "State", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.State), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "FK_DealerManpowerTarget", "DealerManpower", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.DealerManpower), "Target", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.Target), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "FK_StateDealer", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.State), "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.Dealer), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "FK_MonthTarget", "Month", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Month), "Target", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.Target), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "UserDealerManpower", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.User), "DealerManpower", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.DealerManpower), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "ProductCategoryProduct", "ProductCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.ProductCategory), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.Product), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "MonthDealerManpowerTargets", "Month", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Month), "DealerManpowerTargets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.DealerManpowerTargets), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "UserDealerManpowerTargets", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.User), "DealerManpowerTargets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.DealerManpowerTargets), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "DealerManpowerProfile", "DealerManpower", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.DealerManpower), "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Profile))]
[assembly: EdmRelationshipAttribute("DmpModel", "DealerManpowerTrainingProfileMap", "DealerManpower", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.DealerManpower), "TrainingProfileMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.TrainingProfileMap), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "TrainingTrainingProfileMap", "Training", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Training), "TrainingProfileMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.TrainingProfileMap), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "DealerManpowerCompetencyProfileMap", "DealerManpower", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.DealerManpower), "CompetencyProfileMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.CompetencyProfileMap), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "CompetencyCompetencyProfileMap", "Competency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Competency), "CompetencyProfileMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.CompetencyProfileMap), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "RegionSpecialScheme", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Region), "SpecialScheme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.SpecialScheme), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "MonthSpecialScheme", "Month", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Month), "SpecialScheme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.SpecialScheme), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "DealerManpowerIncentive", "DealerManpower", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.DealerManpower), "Incentive", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.Incentive), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "DealerDealerManpowerTargets", "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Dealer), "DealerManpowerTargets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.DealerManpowerTargets), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "ProductDealerManpowerTargets", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Product), "DealerManpowerTargets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.DealerManpowerTargets), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "AttritionAttritionProfileMap", "Attrition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Attrition), "AttritionProfileMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.AttritionProfileMap), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "MonthIncentive", "Month", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Month), "Incentive", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.Incentive), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "DealerManpowerAttritionProfileMap", "DealerManpower", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.DealerManpower), "AttritionProfileMap", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DMP.Repository.AttritionProfileMap))]
[assembly: EdmRelationshipAttribute("DmpModel", "DealerUserDealerMap", "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Dealer), "UserDealerMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.UserDealerMap), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "UserUserDealerMap", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.User), "UserDealerMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.UserDealerMap), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "ProductDealerManpower", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Product), "DealerManpower", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.DealerManpower), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "RegionUserRegionMap", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Region), "UserRegionMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.UserRegionMap), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "UserUserRegionMap", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.User), "UserRegionMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.UserRegionMap), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "DealerManpowerManpowerSalary", "DealerManpower", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.DealerManpower), "ManpowerSalary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.ManpowerSalary), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "IncentiveSpecialSchemeIncentive", "Incentive", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Incentive), "SpecialSchemeIncentive", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.SpecialSchemeIncentive), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "ProductVarientTarget", "ProductVarient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.ProductVarient), "Target", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.Target), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "MonthDsmDseTargetMap", "Month", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.Month), "DsmDseTargetMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.DsmDseTargetMap), true)]
[assembly: EdmRelationshipAttribute("DmpModel", "UserDsmDseTargetMap", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DMP.Repository.User), "DsmDseTargetMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DMP.Repository.DsmDseTargetMap), true)]

#endregion

namespace DMP.Repository
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DmpModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DmpModelContainer object using the connection string found in the 'DmpModelContainer' section of the application configuration file.
        /// </summary>
        public DmpModelContainer() : base("name=DmpModelContainer", "DmpModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DmpModelContainer object.
        /// </summary>
        public DmpModelContainer(string connectionString) : base(connectionString, "DmpModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DmpModelContainer object.
        /// </summary>
        public DmpModelContainer(EntityConnection connection) : base(connection, "DmpModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealerManpower> DealerManpowers
        {
            get
            {
                if ((_DealerManpowers == null))
                {
                    _DealerManpowers = base.CreateObjectSet<DealerManpower>("DealerManpowers");
                }
                return _DealerManpowers;
            }
        }
        private ObjectSet<DealerManpower> _DealerManpowers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dealer> Dealers
        {
            get
            {
                if ((_Dealers == null))
                {
                    _Dealers = base.CreateObjectSet<Dealer>("Dealers");
                }
                return _Dealers;
            }
        }
        private ObjectSet<Dealer> _Dealers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductVarient> ProductVarients
        {
            get
            {
                if ((_ProductVarients == null))
                {
                    _ProductVarients = base.CreateObjectSet<ProductVarient>("ProductVarients");
                }
                return _ProductVarients;
            }
        }
        private ObjectSet<ProductVarient> _ProductVarients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Region>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Region> _Regions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Month> Months
        {
            get
            {
                if ((_Months == null))
                {
                    _Months = base.CreateObjectSet<Month>("Months");
                }
                return _Months;
            }
        }
        private ObjectSet<Month> _Months;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Target> Targets
        {
            get
            {
                if ((_Targets == null))
                {
                    _Targets = base.CreateObjectSet<Target>("Targets");
                }
                return _Targets;
            }
        }
        private ObjectSet<Target> _Targets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile> Profiles
        {
            get
            {
                if ((_Profiles == null))
                {
                    _Profiles = base.CreateObjectSet<Profile>("Profiles");
                }
                return _Profiles;
            }
        }
        private ObjectSet<Profile> _Profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCategory> ProductCategories
        {
            get
            {
                if ((_ProductCategories == null))
                {
                    _ProductCategories = base.CreateObjectSet<ProductCategory>("ProductCategories");
                }
                return _ProductCategories;
            }
        }
        private ObjectSet<ProductCategory> _ProductCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Training> Trainings
        {
            get
            {
                if ((_Trainings == null))
                {
                    _Trainings = base.CreateObjectSet<Training>("Trainings");
                }
                return _Trainings;
            }
        }
        private ObjectSet<Training> _Trainings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealerManpowerTargets> DealerManpowerTargets
        {
            get
            {
                if ((_DealerManpowerTargets == null))
                {
                    _DealerManpowerTargets = base.CreateObjectSet<DealerManpowerTargets>("DealerManpowerTargets");
                }
                return _DealerManpowerTargets;
            }
        }
        private ObjectSet<DealerManpowerTargets> _DealerManpowerTargets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrainingProfileMap> TrainingProfileMaps
        {
            get
            {
                if ((_TrainingProfileMaps == null))
                {
                    _TrainingProfileMaps = base.CreateObjectSet<TrainingProfileMap>("TrainingProfileMaps");
                }
                return _TrainingProfileMaps;
            }
        }
        private ObjectSet<TrainingProfileMap> _TrainingProfileMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Competency> Competencies
        {
            get
            {
                if ((_Competencies == null))
                {
                    _Competencies = base.CreateObjectSet<Competency>("Competencies");
                }
                return _Competencies;
            }
        }
        private ObjectSet<Competency> _Competencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetencyProfileMap> CompetencyProfileMaps
        {
            get
            {
                if ((_CompetencyProfileMaps == null))
                {
                    _CompetencyProfileMaps = base.CreateObjectSet<CompetencyProfileMap>("CompetencyProfileMaps");
                }
                return _CompetencyProfileMaps;
            }
        }
        private ObjectSet<CompetencyProfileMap> _CompetencyProfileMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecialScheme> SpecialSchemes
        {
            get
            {
                if ((_SpecialSchemes == null))
                {
                    _SpecialSchemes = base.CreateObjectSet<SpecialScheme>("SpecialSchemes");
                }
                return _SpecialSchemes;
            }
        }
        private ObjectSet<SpecialScheme> _SpecialSchemes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Incentive> Incentives
        {
            get
            {
                if ((_Incentives == null))
                {
                    _Incentives = base.CreateObjectSet<Incentive>("Incentives");
                }
                return _Incentives;
            }
        }
        private ObjectSet<Incentive> _Incentives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attrition> Attritions
        {
            get
            {
                if ((_Attritions == null))
                {
                    _Attritions = base.CreateObjectSet<Attrition>("Attritions");
                }
                return _Attritions;
            }
        }
        private ObjectSet<Attrition> _Attritions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AttritionProfileMap> AttritionProfileMaps
        {
            get
            {
                if ((_AttritionProfileMaps == null))
                {
                    _AttritionProfileMaps = base.CreateObjectSet<AttritionProfileMap>("AttritionProfileMaps");
                }
                return _AttritionProfileMaps;
            }
        }
        private ObjectSet<AttritionProfileMap> _AttritionProfileMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserDealerMap> UserDealerMaps
        {
            get
            {
                if ((_UserDealerMaps == null))
                {
                    _UserDealerMaps = base.CreateObjectSet<UserDealerMap>("UserDealerMaps");
                }
                return _UserDealerMaps;
            }
        }
        private ObjectSet<UserDealerMap> _UserDealerMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRegionMap> UserRegionMaps
        {
            get
            {
                if ((_UserRegionMaps == null))
                {
                    _UserRegionMaps = base.CreateObjectSet<UserRegionMap>("UserRegionMaps");
                }
                return _UserRegionMaps;
            }
        }
        private ObjectSet<UserRegionMap> _UserRegionMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManpowerSalary> ManpowerSalaries
        {
            get
            {
                if ((_ManpowerSalaries == null))
                {
                    _ManpowerSalaries = base.CreateObjectSet<ManpowerSalary>("ManpowerSalaries");
                }
                return _ManpowerSalaries;
            }
        }
        private ObjectSet<ManpowerSalary> _ManpowerSalaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecialSchemeIncentive> SpecialSchemeIncentives
        {
            get
            {
                if ((_SpecialSchemeIncentives == null))
                {
                    _SpecialSchemeIncentives = base.CreateObjectSet<SpecialSchemeIncentive>("SpecialSchemeIncentives");
                }
                return _SpecialSchemeIncentives;
            }
        }
        private ObjectSet<SpecialSchemeIncentive> _SpecialSchemeIncentives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DsmDseTargetMap> DsmDseTargetMaps
        {
            get
            {
                if ((_DsmDseTargetMaps == null))
                {
                    _DsmDseTargetMaps = base.CreateObjectSet<DsmDseTargetMap>("DsmDseTargetMaps");
                }
                return _DsmDseTargetMaps;
            }
        }
        private ObjectSet<DsmDseTargetMap> _DsmDseTargetMaps;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealerManpowers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealerManpowers(DealerManpower dealerManpower)
        {
            base.AddObject("DealerManpowers", dealerManpower);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dealers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealers(Dealer dealer)
        {
            base.AddObject("Dealers", dealer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductVarients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductVarients(ProductVarient productVarient)
        {
            base.AddObject("ProductVarients", productVarient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegions(Region region)
        {
            base.AddObject("Regions", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Months EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonths(Month month)
        {
            base.AddObject("Months", month);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Targets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTargets(Target target)
        {
            base.AddObject("Targets", target);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfiles(Profile profile)
        {
            base.AddObject("Profiles", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCategories(ProductCategory productCategory)
        {
            base.AddObject("ProductCategories", productCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trainings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainings(Training training)
        {
            base.AddObject("Trainings", training);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealerManpowerTargets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealerManpowerTargets(DealerManpowerTargets dealerManpowerTargets)
        {
            base.AddObject("DealerManpowerTargets", dealerManpowerTargets);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrainingProfileMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainingProfileMaps(TrainingProfileMap trainingProfileMap)
        {
            base.AddObject("TrainingProfileMaps", trainingProfileMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Competencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetencies(Competency competency)
        {
            base.AddObject("Competencies", competency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetencyProfileMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetencyProfileMaps(CompetencyProfileMap competencyProfileMap)
        {
            base.AddObject("CompetencyProfileMaps", competencyProfileMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecialSchemes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecialSchemes(SpecialScheme specialScheme)
        {
            base.AddObject("SpecialSchemes", specialScheme);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Incentives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIncentives(Incentive incentive)
        {
            base.AddObject("Incentives", incentive);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attritions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttritions(Attrition attrition)
        {
            base.AddObject("Attritions", attrition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AttritionProfileMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttritionProfileMaps(AttritionProfileMap attritionProfileMap)
        {
            base.AddObject("AttritionProfileMaps", attritionProfileMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserDealerMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserDealerMaps(UserDealerMap userDealerMap)
        {
            base.AddObject("UserDealerMaps", userDealerMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRegionMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRegionMaps(UserRegionMap userRegionMap)
        {
            base.AddObject("UserRegionMaps", userRegionMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManpowerSalaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManpowerSalaries(ManpowerSalary manpowerSalary)
        {
            base.AddObject("ManpowerSalaries", manpowerSalary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecialSchemeIncentives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecialSchemeIncentives(SpecialSchemeIncentive specialSchemeIncentive)
        {
            base.AddObject("SpecialSchemeIncentives", specialSchemeIncentive);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DsmDseTargetMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDsmDseTargetMaps(DsmDseTargetMap dsmDseTargetMap)
        {
            base.AddObject("DsmDseTargetMaps", dsmDseTargetMap);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="Attrition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attrition : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attrition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="designation">Initial value of the Designation property.</param>
        public static Attrition CreateAttrition(global::System.Int32 id, global::System.String name, ObjectInfo objectInfo, global::System.String designation)
        {
            Attrition attrition = new Attrition();
            attrition.Id = id;
            attrition.Name = name;
            attrition.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            attrition.Designation = designation;
            return attrition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "AttritionAttritionProfileMap", "AttritionProfileMap")]
        public EntityCollection<AttritionProfileMap> AttritionProfileMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttritionProfileMap>("DmpModel.AttritionAttritionProfileMap", "AttritionProfileMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttritionProfileMap>("DmpModel.AttritionAttritionProfileMap", "AttritionProfileMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="AttritionProfileMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AttritionProfileMap : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AttritionProfileMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="attritionId">Initial value of the AttritionId property.</param>
        public static AttritionProfileMap CreateAttritionProfileMap(global::System.Int32 id, ObjectInfo objectInfo, global::System.Int32 attritionId)
        {
            AttritionProfileMap attritionProfileMap = new AttritionProfileMap();
            attritionProfileMap.Id = id;
            attritionProfileMap.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            attritionProfileMap.AttritionId = attritionId;
            return attritionProfileMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttritionId
        {
            get
            {
                return _AttritionId;
            }
            set
            {
                OnAttritionIdChanging(value);
                ReportPropertyChanging("AttritionId");
                _AttritionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttritionId");
                OnAttritionIdChanged();
            }
        }
        private global::System.Int32 _AttritionId;
        partial void OnAttritionIdChanging(global::System.Int32 value);
        partial void OnAttritionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfLeaving
        {
            get
            {
                return _DateOfLeaving;
            }
            set
            {
                OnDateOfLeavingChanging(value);
                ReportPropertyChanging("DateOfLeaving");
                _DateOfLeaving = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfLeaving");
                OnDateOfLeavingChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfLeaving;
        partial void OnDateOfLeavingChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfLeavingChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "AttritionAttritionProfileMap", "Attrition")]
        public Attrition Attrition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attrition>("DmpModel.AttritionAttritionProfileMap", "Attrition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attrition>("DmpModel.AttritionAttritionProfileMap", "Attrition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attrition> AttritionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attrition>("DmpModel.AttritionAttritionProfileMap", "Attrition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attrition>("DmpModel.AttritionAttritionProfileMap", "Attrition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerAttritionProfileMap", "DealerManpower")]
        public DealerManpower DealerManpower
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerAttritionProfileMap", "DealerManpower").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerAttritionProfileMap", "DealerManpower").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealerManpower> DealerManpowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerAttritionProfileMap", "DealerManpower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealerManpower>("DmpModel.DealerManpowerAttritionProfileMap", "DealerManpower", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="Competency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Competency : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Competency object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="designation">Initial value of the Designation property.</param>
        public static Competency CreateCompetency(global::System.Int32 id, global::System.String name, ObjectInfo objectInfo, global::System.String designation)
        {
            Competency competency = new Competency();
            competency.Id = id;
            competency.Name = name;
            competency.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            competency.Designation = designation;
            return competency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "CompetencyCompetencyProfileMap", "CompetencyProfileMap")]
        public EntityCollection<CompetencyProfileMap> CompetencyProfileMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetencyProfileMap>("DmpModel.CompetencyCompetencyProfileMap", "CompetencyProfileMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetencyProfileMap>("DmpModel.CompetencyCompetencyProfileMap", "CompetencyProfileMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="CompetencyProfileMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetencyProfileMap : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetencyProfileMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dealerManpowerId">Initial value of the DealerManpowerId property.</param>
        /// <param name="competencyId">Initial value of the CompetencyId property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        public static CompetencyProfileMap CreateCompetencyProfileMap(global::System.Int32 id, global::System.Int32 dealerManpowerId, global::System.Int32 competencyId, global::System.Double score, ObjectInfo objectInfo)
        {
            CompetencyProfileMap competencyProfileMap = new CompetencyProfileMap();
            competencyProfileMap.Id = id;
            competencyProfileMap.DealerManpowerId = dealerManpowerId;
            competencyProfileMap.CompetencyId = competencyId;
            competencyProfileMap.Score = score;
            competencyProfileMap.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            return competencyProfileMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealerManpowerId
        {
            get
            {
                return _DealerManpowerId;
            }
            set
            {
                OnDealerManpowerIdChanging(value);
                ReportPropertyChanging("DealerManpowerId");
                _DealerManpowerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerManpowerId");
                OnDealerManpowerIdChanged();
            }
        }
        private global::System.Int32 _DealerManpowerId;
        partial void OnDealerManpowerIdChanging(global::System.Int32 value);
        partial void OnDealerManpowerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetencyId
        {
            get
            {
                return _CompetencyId;
            }
            set
            {
                OnCompetencyIdChanging(value);
                ReportPropertyChanging("CompetencyId");
                _CompetencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetencyId");
                OnCompetencyIdChanged();
            }
        }
        private global::System.Int32 _CompetencyId;
        partial void OnCompetencyIdChanging(global::System.Int32 value);
        partial void OnCompetencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Double _Score;
        partial void OnScoreChanging(global::System.Double value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerCompetencyProfileMap", "DealerManpower")]
        public DealerManpower DealerManpower
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerCompetencyProfileMap", "DealerManpower").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerCompetencyProfileMap", "DealerManpower").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealerManpower> DealerManpowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerCompetencyProfileMap", "DealerManpower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealerManpower>("DmpModel.DealerManpowerCompetencyProfileMap", "DealerManpower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "CompetencyCompetencyProfileMap", "Competency")]
        public Competency Competency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competency>("DmpModel.CompetencyCompetencyProfileMap", "Competency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competency>("DmpModel.CompetencyCompetencyProfileMap", "Competency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Competency> CompetencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competency>("DmpModel.CompetencyCompetencyProfileMap", "Competency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Competency>("DmpModel.CompetencyCompetencyProfileMap", "Competency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="Dealer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dealer : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dealer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        public static Dealer CreateDealer(global::System.Int32 id, global::System.String name, global::System.Int32 stateId, ObjectInfo objectInfo)
        {
            Dealer dealer = new Dealer();
            dealer.Id = id;
            dealer.Name = name;
            dealer.StateId = stateId;
            dealer.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            return dealer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_DealerDealerManpower", "DealerManpower")]
        public EntityCollection<DealerManpower> DealerManpowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealerManpower>("DmpModel.FK_DealerDealerManpower", "DealerManpower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealerManpower>("DmpModel.FK_DealerDealerManpower", "DealerManpower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_StateDealer", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("DmpModel.FK_StateDealer", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("DmpModel.FK_StateDealer", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("DmpModel.FK_StateDealer", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("DmpModel.FK_StateDealer", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerDealerManpowerTargets", "DealerManpowerTargets")]
        public EntityCollection<DealerManpowerTargets> DealerManpowerTargets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealerManpowerTargets>("DmpModel.DealerDealerManpowerTargets", "DealerManpowerTargets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealerManpowerTargets>("DmpModel.DealerDealerManpowerTargets", "DealerManpowerTargets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerUserDealerMap", "UserDealerMap")]
        public EntityCollection<UserDealerMap> UserDealerMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserDealerMap>("DmpModel.DealerUserDealerMap", "UserDealerMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserDealerMap>("DmpModel.DealerUserDealerMap", "UserDealerMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="DealerManpower")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealerManpower : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealerManpower object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="dealerId">Initial value of the DealerId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        public static DealerManpower CreateDealerManpower(global::System.Int32 id, global::System.String name, global::System.String type, global::System.Int32 dealerId, global::System.Int32 userId, ObjectInfo objectInfo, global::System.Int32 productId)
        {
            DealerManpower dealerManpower = new DealerManpower();
            dealerManpower.Id = id;
            dealerManpower.Name = name;
            dealerManpower.Type = type;
            dealerManpower.DealerId = dealerId;
            dealerManpower.UserId = userId;
            dealerManpower.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            dealerManpower.ProductId = productId;
            return dealerManpower;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealerId
        {
            get
            {
                return _DealerId;
            }
            set
            {
                OnDealerIdChanging(value);
                ReportPropertyChanging("DealerId");
                _DealerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerId");
                OnDealerIdChanged();
            }
        }
        private global::System.Int32 _DealerId;
        partial void OnDealerIdChanging(global::System.Int32 value);
        partial void OnDealerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_DealerDealerManpower", "Dealer")]
        public Dealer Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("DmpModel.FK_DealerDealerManpower", "Dealer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("DmpModel.FK_DealerDealerManpower", "Dealer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealer> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("DmpModel.FK_DealerDealerManpower", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealer>("DmpModel.FK_DealerDealerManpower", "Dealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_DealerManpowerTarget", "Target")]
        public EntityCollection<Target> Targets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Target>("DmpModel.FK_DealerManpowerTarget", "Target");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Target>("DmpModel.FK_DealerManpowerTarget", "Target", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "UserDealerManpower", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserDealerManpower", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserDealerManpower", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserDealerManpower", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DmpModel.UserDealerManpower", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerProfile", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("DmpModel.DealerManpowerProfile", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("DmpModel.DealerManpowerProfile", "Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("DmpModel.DealerManpowerProfile", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("DmpModel.DealerManpowerProfile", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerTrainingProfileMap", "TrainingProfileMap")]
        public EntityCollection<TrainingProfileMap> TrainingProfileMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrainingProfileMap>("DmpModel.DealerManpowerTrainingProfileMap", "TrainingProfileMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrainingProfileMap>("DmpModel.DealerManpowerTrainingProfileMap", "TrainingProfileMap", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerCompetencyProfileMap", "CompetencyProfileMap")]
        public EntityCollection<CompetencyProfileMap> CompetencyProfileMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetencyProfileMap>("DmpModel.DealerManpowerCompetencyProfileMap", "CompetencyProfileMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetencyProfileMap>("DmpModel.DealerManpowerCompetencyProfileMap", "CompetencyProfileMap", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerIncentive", "Incentive")]
        public EntityCollection<Incentive> Incentives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Incentive>("DmpModel.DealerManpowerIncentive", "Incentive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Incentive>("DmpModel.DealerManpowerIncentive", "Incentive", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerAttritionProfileMap", "AttritionProfileMap")]
        public AttritionProfileMap AttritionProfileMap
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttritionProfileMap>("DmpModel.DealerManpowerAttritionProfileMap", "AttritionProfileMap").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttritionProfileMap>("DmpModel.DealerManpowerAttritionProfileMap", "AttritionProfileMap").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AttritionProfileMap> AttritionProfileMapReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AttritionProfileMap>("DmpModel.DealerManpowerAttritionProfileMap", "AttritionProfileMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AttritionProfileMap>("DmpModel.DealerManpowerAttritionProfileMap", "AttritionProfileMap", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "ProductDealerManpower", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DmpModel.ProductDealerManpower", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DmpModel.ProductDealerManpower", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DmpModel.ProductDealerManpower", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("DmpModel.ProductDealerManpower", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerManpowerSalary", "ManpowerSalary")]
        public EntityCollection<ManpowerSalary> ManpowerSalaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManpowerSalary>("DmpModel.DealerManpowerManpowerSalary", "ManpowerSalary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManpowerSalary>("DmpModel.DealerManpowerManpowerSalary", "ManpowerSalary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="DealerManpowerTargets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealerManpowerTargets : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealerManpowerTargets object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="monthId">Initial value of the MonthId property.</param>
        /// <param name="planned">Initial value of the Planned property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="dealerId">Initial value of the DealerId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        public static DealerManpowerTargets CreateDealerManpowerTargets(global::System.Int32 id, global::System.Int32 monthId, global::System.Int32 planned, global::System.Int32 userId, ObjectInfo objectInfo, global::System.Int32 dealerId, global::System.Int32 productId)
        {
            DealerManpowerTargets dealerManpowerTargets = new DealerManpowerTargets();
            dealerManpowerTargets.Id = id;
            dealerManpowerTargets.MonthId = monthId;
            dealerManpowerTargets.Planned = planned;
            dealerManpowerTargets.UserId = userId;
            dealerManpowerTargets.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            dealerManpowerTargets.DealerId = dealerId;
            dealerManpowerTargets.ProductId = productId;
            return dealerManpowerTargets;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthId
        {
            get
            {
                return _MonthId;
            }
            set
            {
                OnMonthIdChanging(value);
                ReportPropertyChanging("MonthId");
                _MonthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthId");
                OnMonthIdChanged();
            }
        }
        private global::System.Int32 _MonthId;
        partial void OnMonthIdChanging(global::System.Int32 value);
        partial void OnMonthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Planned
        {
            get
            {
                return _Planned;
            }
            set
            {
                OnPlannedChanging(value);
                ReportPropertyChanging("Planned");
                _Planned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Planned");
                OnPlannedChanged();
            }
        }
        private global::System.Int32 _Planned;
        partial void OnPlannedChanging(global::System.Int32 value);
        partial void OnPlannedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealerId
        {
            get
            {
                return _DealerId;
            }
            set
            {
                OnDealerIdChanging(value);
                ReportPropertyChanging("DealerId");
                _DealerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerId");
                OnDealerIdChanged();
            }
        }
        private global::System.Int32 _DealerId;
        partial void OnDealerIdChanging(global::System.Int32 value);
        partial void OnDealerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "MonthDealerManpowerTargets", "Month")]
        public Month Month
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthDealerManpowerTargets", "Month").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthDealerManpowerTargets", "Month").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Month> MonthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthDealerManpowerTargets", "Month");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Month>("DmpModel.MonthDealerManpowerTargets", "Month", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "UserDealerManpowerTargets", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserDealerManpowerTargets", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserDealerManpowerTargets", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserDealerManpowerTargets", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DmpModel.UserDealerManpowerTargets", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerDealerManpowerTargets", "Dealer")]
        public Dealer Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("DmpModel.DealerDealerManpowerTargets", "Dealer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("DmpModel.DealerDealerManpowerTargets", "Dealer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealer> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("DmpModel.DealerDealerManpowerTargets", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealer>("DmpModel.DealerDealerManpowerTargets", "Dealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "ProductDealerManpowerTargets", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DmpModel.ProductDealerManpowerTargets", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DmpModel.ProductDealerManpowerTargets", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DmpModel.ProductDealerManpowerTargets", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("DmpModel.ProductDealerManpowerTargets", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="DsmDseTargetMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DsmDseTargetMap : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DsmDseTargetMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dsmId">Initial value of the DsmId property.</param>
        /// <param name="dseId">Initial value of the DseId property.</param>
        /// <param name="monthId">Initial value of the MonthId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        public static DsmDseTargetMap CreateDsmDseTargetMap(global::System.Int32 id, global::System.Int32 dsmId, global::System.Int32 dseId, global::System.Int32 monthId, global::System.Int32 userId, ObjectInfo objectInfo)
        {
            DsmDseTargetMap dsmDseTargetMap = new DsmDseTargetMap();
            dsmDseTargetMap.Id = id;
            dsmDseTargetMap.DsmId = dsmId;
            dsmDseTargetMap.DseId = dseId;
            dsmDseTargetMap.MonthId = monthId;
            dsmDseTargetMap.UserId = userId;
            dsmDseTargetMap.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            return dsmDseTargetMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DsmId
        {
            get
            {
                return _DsmId;
            }
            set
            {
                OnDsmIdChanging(value);
                ReportPropertyChanging("DsmId");
                _DsmId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DsmId");
                OnDsmIdChanged();
            }
        }
        private global::System.Int32 _DsmId;
        partial void OnDsmIdChanging(global::System.Int32 value);
        partial void OnDsmIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DseId
        {
            get
            {
                return _DseId;
            }
            set
            {
                OnDseIdChanging(value);
                ReportPropertyChanging("DseId");
                _DseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DseId");
                OnDseIdChanged();
            }
        }
        private global::System.Int32 _DseId;
        partial void OnDseIdChanging(global::System.Int32 value);
        partial void OnDseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthId
        {
            get
            {
                return _MonthId;
            }
            set
            {
                OnMonthIdChanging(value);
                ReportPropertyChanging("MonthId");
                _MonthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthId");
                OnMonthIdChanged();
            }
        }
        private global::System.Int32 _MonthId;
        partial void OnMonthIdChanging(global::System.Int32 value);
        partial void OnMonthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "MonthDsmDseTargetMap", "Month")]
        public Month Month
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthDsmDseTargetMap", "Month").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthDsmDseTargetMap", "Month").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Month> MonthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthDsmDseTargetMap", "Month");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Month>("DmpModel.MonthDsmDseTargetMap", "Month", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "UserDsmDseTargetMap", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserDsmDseTargetMap", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserDsmDseTargetMap", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserDsmDseTargetMap", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DmpModel.UserDsmDseTargetMap", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="Incentive")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Incentive : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Incentive object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dealer">Initial value of the Dealer property.</param>
        /// <param name="volvo">Initial value of the Volvo property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="dealerManpowerId">Initial value of the DealerManpowerId property.</param>
        /// <param name="monthId">Initial value of the MonthId property.</param>
        public static Incentive CreateIncentive(global::System.Int32 id, global::System.Double dealer, global::System.Double volvo, ObjectInfo objectInfo, global::System.Int32 dealerManpowerId, global::System.Int32 monthId)
        {
            Incentive incentive = new Incentive();
            incentive.Id = id;
            incentive.Dealer = dealer;
            incentive.Volvo = volvo;
            incentive.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            incentive.DealerManpowerId = dealerManpowerId;
            incentive.MonthId = monthId;
            return incentive;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Dealer
        {
            get
            {
                return _Dealer;
            }
            set
            {
                OnDealerChanging(value);
                ReportPropertyChanging("Dealer");
                _Dealer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dealer");
                OnDealerChanged();
            }
        }
        private global::System.Double _Dealer;
        partial void OnDealerChanging(global::System.Double value);
        partial void OnDealerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Volvo
        {
            get
            {
                return _Volvo;
            }
            set
            {
                OnVolvoChanging(value);
                ReportPropertyChanging("Volvo");
                _Volvo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volvo");
                OnVolvoChanged();
            }
        }
        private global::System.Double _Volvo;
        partial void OnVolvoChanging(global::System.Double value);
        partial void OnVolvoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealerManpowerId
        {
            get
            {
                return _DealerManpowerId;
            }
            set
            {
                OnDealerManpowerIdChanging(value);
                ReportPropertyChanging("DealerManpowerId");
                _DealerManpowerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerManpowerId");
                OnDealerManpowerIdChanged();
            }
        }
        private global::System.Int32 _DealerManpowerId;
        partial void OnDealerManpowerIdChanging(global::System.Int32 value);
        partial void OnDealerManpowerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthId
        {
            get
            {
                return _MonthId;
            }
            set
            {
                OnMonthIdChanging(value);
                ReportPropertyChanging("MonthId");
                _MonthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthId");
                OnMonthIdChanged();
            }
        }
        private global::System.Int32 _MonthId;
        partial void OnMonthIdChanging(global::System.Int32 value);
        partial void OnMonthIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerIncentive", "DealerManpower")]
        public DealerManpower DealerManpower
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerIncentive", "DealerManpower").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerIncentive", "DealerManpower").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealerManpower> DealerManpowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerIncentive", "DealerManpower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealerManpower>("DmpModel.DealerManpowerIncentive", "DealerManpower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "MonthIncentive", "Month")]
        public Month Month
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthIncentive", "Month").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthIncentive", "Month").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Month> MonthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthIncentive", "Month");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Month>("DmpModel.MonthIncentive", "Month", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "IncentiveSpecialSchemeIncentive", "SpecialSchemeIncentive")]
        public EntityCollection<SpecialSchemeIncentive> SpecialSchemeIncentives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecialSchemeIncentive>("DmpModel.IncentiveSpecialSchemeIncentive", "SpecialSchemeIncentive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecialSchemeIncentive>("DmpModel.IncentiveSpecialSchemeIncentive", "SpecialSchemeIncentive", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="ManpowerSalary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManpowerSalary : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManpowerSalary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="salary">Initial value of the Salary property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="dealerManpowerId">Initial value of the DealerManpowerId property.</param>
        public static ManpowerSalary CreateManpowerSalary(global::System.Int32 id, global::System.Double salary, ObjectInfo objectInfo, global::System.Int32 dealerManpowerId)
        {
            ManpowerSalary manpowerSalary = new ManpowerSalary();
            manpowerSalary.Id = id;
            manpowerSalary.Salary = salary;
            manpowerSalary.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            manpowerSalary.DealerManpowerId = dealerManpowerId;
            return manpowerSalary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private global::System.Double _Salary;
        partial void OnSalaryChanging(global::System.Double value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealerManpowerId
        {
            get
            {
                return _DealerManpowerId;
            }
            set
            {
                OnDealerManpowerIdChanging(value);
                ReportPropertyChanging("DealerManpowerId");
                _DealerManpowerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerManpowerId");
                OnDealerManpowerIdChanged();
            }
        }
        private global::System.Int32 _DealerManpowerId;
        partial void OnDealerManpowerIdChanging(global::System.Int32 value);
        partial void OnDealerManpowerIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerManpowerSalary", "DealerManpower")]
        public DealerManpower DealerManpower
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerManpowerSalary", "DealerManpower").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerManpowerSalary", "DealerManpower").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealerManpower> DealerManpowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerManpowerSalary", "DealerManpower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealerManpower>("DmpModel.DealerManpowerManpowerSalary", "DealerManpower", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="Month")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Month : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Month object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="numberOfEmployee">Initial value of the NumberOfEmployee property.</param>
        public static Month CreateMonth(global::System.Int32 id, global::System.String name, global::System.Int32 year, ObjectInfo objectInfo, global::System.Int32 numberOfEmployee)
        {
            Month month = new Month();
            month.Id = id;
            month.Name = name;
            month.Year = year;
            month.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            month.NumberOfEmployee = numberOfEmployee;
            return month;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfEmployee
        {
            get
            {
                return _NumberOfEmployee;
            }
            set
            {
                OnNumberOfEmployeeChanging(value);
                ReportPropertyChanging("NumberOfEmployee");
                _NumberOfEmployee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfEmployee");
                OnNumberOfEmployeeChanged();
            }
        }
        private global::System.Int32 _NumberOfEmployee;
        partial void OnNumberOfEmployeeChanging(global::System.Int32 value);
        partial void OnNumberOfEmployeeChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_MonthTarget", "Target")]
        public EntityCollection<Target> Targets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Target>("DmpModel.FK_MonthTarget", "Target");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Target>("DmpModel.FK_MonthTarget", "Target", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "MonthDealerManpowerTargets", "DealerManpowerTargets")]
        public EntityCollection<DealerManpowerTargets> DealerManpowerTargets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealerManpowerTargets>("DmpModel.MonthDealerManpowerTargets", "DealerManpowerTargets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealerManpowerTargets>("DmpModel.MonthDealerManpowerTargets", "DealerManpowerTargets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "MonthSpecialScheme", "SpecialScheme")]
        public EntityCollection<SpecialScheme> SpecialSchemes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecialScheme>("DmpModel.MonthSpecialScheme", "SpecialScheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecialScheme>("DmpModel.MonthSpecialScheme", "SpecialScheme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "MonthIncentive", "Incentive")]
        public EntityCollection<Incentive> Incentives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Incentive>("DmpModel.MonthIncentive", "Incentive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Incentive>("DmpModel.MonthIncentive", "Incentive", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "MonthDsmDseTargetMap", "DsmDseTargetMap")]
        public EntityCollection<DsmDseTargetMap> DsmDseTargetMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DsmDseTargetMap>("DmpModel.MonthDsmDseTargetMap", "DsmDseTargetMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DsmDseTargetMap>("DmpModel.MonthDsmDseTargetMap", "DsmDseTargetMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="productCategoryId">Initial value of the ProductCategoryId property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="isCommon">Initial value of the IsCommon property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String name, global::System.Int32 productCategoryId, ObjectInfo objectInfo, global::System.Boolean isCommon)
        {
            Product product = new Product();
            product.Id = id;
            product.Name = name;
            product.ProductCategoryId = productCategoryId;
            product.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            product.IsCommon = isCommon;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductCategoryId
        {
            get
            {
                return _ProductCategoryId;
            }
            set
            {
                OnProductCategoryIdChanging(value);
                ReportPropertyChanging("ProductCategoryId");
                _ProductCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCategoryId");
                OnProductCategoryIdChanged();
            }
        }
        private global::System.Int32 _ProductCategoryId;
        partial void OnProductCategoryIdChanging(global::System.Int32 value);
        partial void OnProductCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCommon
        {
            get
            {
                return _IsCommon;
            }
            set
            {
                OnIsCommonChanging(value);
                ReportPropertyChanging("IsCommon");
                _IsCommon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCommon");
                OnIsCommonChanged();
            }
        }
        private global::System.Boolean _IsCommon;
        partial void OnIsCommonChanging(global::System.Boolean value);
        partial void OnIsCommonChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_ProductProductVarient", "ProductVarient")]
        public EntityCollection<ProductVarient> ProductVarients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductVarient>("DmpModel.FK_ProductProductVarient", "ProductVarient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductVarient>("DmpModel.FK_ProductProductVarient", "ProductVarient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "ProductCategoryProduct", "ProductCategory")]
        public ProductCategory ProductCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("DmpModel.ProductCategoryProduct", "ProductCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("DmpModel.ProductCategoryProduct", "ProductCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductCategory> ProductCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductCategory>("DmpModel.ProductCategoryProduct", "ProductCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductCategory>("DmpModel.ProductCategoryProduct", "ProductCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "ProductDealerManpowerTargets", "DealerManpowerTargets")]
        public EntityCollection<DealerManpowerTargets> DealerManpowerTargets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealerManpowerTargets>("DmpModel.ProductDealerManpowerTargets", "DealerManpowerTargets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealerManpowerTargets>("DmpModel.ProductDealerManpowerTargets", "DealerManpowerTargets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "ProductDealerManpower", "DealerManpower")]
        public EntityCollection<DealerManpower> DealerManpowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealerManpower>("DmpModel.ProductDealerManpower", "DealerManpower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealerManpower>("DmpModel.ProductDealerManpower", "DealerManpower", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="ProductCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCategory : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        public static ProductCategory CreateProductCategory(global::System.Int32 id, global::System.String name, ObjectInfo objectInfo)
        {
            ProductCategory productCategory = new ProductCategory();
            productCategory.Id = id;
            productCategory.Name = name;
            productCategory.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            return productCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "ProductCategoryProduct", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("DmpModel.ProductCategoryProduct", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("DmpModel.ProductCategoryProduct", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="ProductVarient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductVarient : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductVarient object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        public static ProductVarient CreateProductVarient(global::System.Int32 id, global::System.String name, global::System.Int32 productId, ObjectInfo objectInfo)
        {
            ProductVarient productVarient = new ProductVarient();
            productVarient.Id = id;
            productVarient.Name = name;
            productVarient.ProductId = productId;
            productVarient.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            return productVarient;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_ProductProductVarient", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DmpModel.FK_ProductProductVarient", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DmpModel.FK_ProductProductVarient", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DmpModel.FK_ProductProductVarient", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("DmpModel.FK_ProductProductVarient", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "ProductVarientTarget", "Target")]
        public EntityCollection<Target> Targets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Target>("DmpModel.ProductVarientTarget", "Target");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Target>("DmpModel.ProductVarientTarget", "Target", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contactNumber">Initial value of the ContactNumber property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        public static Profile CreateProfile(global::System.Int32 id, global::System.String contactNumber, ObjectInfo objectInfo)
        {
            Profile profile = new Profile();
            profile.Id = id;
            profile.ContactNumber = contactNumber;
            profile.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            return profile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactNumber
        {
            get
            {
                return _ContactNumber;
            }
            set
            {
                OnContactNumberChanging(value);
                ReportPropertyChanging("ContactNumber");
                _ContactNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactNumber");
                OnContactNumberChanged();
            }
        }
        private global::System.String _ContactNumber;
        partial void OnContactNumberChanging(global::System.String value);
        partial void OnContactNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PANNumber
        {
            get
            {
                return _PANNumber;
            }
            set
            {
                OnPANNumberChanging(value);
                ReportPropertyChanging("PANNumber");
                _PANNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PANNumber");
                OnPANNumberChanged();
            }
        }
        private global::System.String _PANNumber;
        partial void OnPANNumberChanging(global::System.String value);
        partial void OnPANNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfJoining
        {
            get
            {
                return _DateOfJoining;
            }
            set
            {
                OnDateOfJoiningChanging(value);
                ReportPropertyChanging("DateOfJoining");
                _DateOfJoining = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfJoining");
                OnDateOfJoiningChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfJoining;
        partial void OnDateOfJoiningChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfJoiningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousCompany
        {
            get
            {
                return _PreviousCompany;
            }
            set
            {
                OnPreviousCompanyChanging(value);
                ReportPropertyChanging("PreviousCompany");
                _PreviousCompany = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousCompany");
                OnPreviousCompanyChanged();
            }
        }
        private global::System.String _PreviousCompany;
        partial void OnPreviousCompanyChanging(global::System.String value);
        partial void OnPreviousCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousJobProfile
        {
            get
            {
                return _PreviousJobProfile;
            }
            set
            {
                OnPreviousJobProfileChanging(value);
                ReportPropertyChanging("PreviousJobProfile");
                _PreviousJobProfile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousJobProfile");
                OnPreviousJobProfileChanged();
            }
        }
        private global::System.String _PreviousJobProfile;
        partial void OnPreviousJobProfileChanging(global::System.String value);
        partial void OnPreviousJobProfileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TotalWorkExperience
        {
            get
            {
                return _TotalWorkExperience;
            }
            set
            {
                OnTotalWorkExperienceChanging(value);
                ReportPropertyChanging("TotalWorkExperience");
                _TotalWorkExperience = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalWorkExperience");
                OnTotalWorkExperienceChanged();
            }
        }
        private Nullable<global::System.Double> _TotalWorkExperience;
        partial void OnTotalWorkExperienceChanging(Nullable<global::System.Double> value);
        partial void OnTotalWorkExperienceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ExperienceWithVE
        {
            get
            {
                return _ExperienceWithVE;
            }
            set
            {
                OnExperienceWithVEChanging(value);
                ReportPropertyChanging("ExperienceWithVE");
                _ExperienceWithVE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperienceWithVE");
                OnExperienceWithVEChanged();
            }
        }
        private Nullable<global::System.Double> _ExperienceWithVE;
        partial void OnExperienceWithVEChanging(Nullable<global::System.Double> value);
        partial void OnExperienceWithVEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TIVRepresenting
        {
            get
            {
                return _TIVRepresenting;
            }
            set
            {
                OnTIVRepresentingChanging(value);
                ReportPropertyChanging("TIVRepresenting");
                _TIVRepresenting = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TIVRepresenting");
                OnTIVRepresentingChanged();
            }
        }
        private global::System.String _TIVRepresenting;
        partial void OnTIVRepresentingChanging(global::System.String value);
        partial void OnTIVRepresentingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfLeaving
        {
            get
            {
                return _DateOfLeaving;
            }
            set
            {
                OnDateOfLeavingChanging(value);
                ReportPropertyChanging("DateOfLeaving");
                _DateOfLeaving = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfLeaving");
                OnDateOfLeavingChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfLeaving;
        partial void OnDateOfLeavingChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfLeavingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrainingLevel
        {
            get
            {
                return _TrainingLevel;
            }
            set
            {
                OnTrainingLevelChanging(value);
                ReportPropertyChanging("TrainingLevel");
                _TrainingLevel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrainingLevel");
                OnTrainingLevelChanged();
            }
        }
        private global::System.String _TrainingLevel;
        partial void OnTrainingLevelChanging(global::System.String value);
        partial void OnTrainingLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SAPCode
        {
            get
            {
                return _SAPCode;
            }
            set
            {
                OnSAPCodeChanging(value);
                ReportPropertyChanging("SAPCode");
                _SAPCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SAPCode");
                OnSAPCodeChanged();
            }
        }
        private global::System.String _SAPCode;
        partial void OnSAPCodeChanging(global::System.String value);
        partial void OnSAPCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaRepresenting
        {
            get
            {
                return _AreaRepresenting;
            }
            set
            {
                OnAreaRepresentingChanging(value);
                ReportPropertyChanging("AreaRepresenting");
                _AreaRepresenting = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaRepresenting");
                OnAreaRepresentingChanged();
            }
        }
        private global::System.String _AreaRepresenting;
        partial void OnAreaRepresentingChanging(global::System.String value);
        partial void OnAreaRepresentingChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerProfile", "DealerManpower")]
        public DealerManpower DealerManpower
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerProfile", "DealerManpower").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerProfile", "DealerManpower").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealerManpower> DealerManpowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerProfile", "DealerManpower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealerManpower>("DmpModel.DealerManpowerProfile", "DealerManpower", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        public static Region CreateRegion(global::System.Int32 id, global::System.String name, ObjectInfo objectInfo)
        {
            Region region = new Region();
            region.Id = id;
            region.Name = name;
            region.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            return region;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_RegionState", "State")]
        public EntityCollection<State> States
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<State>("DmpModel.FK_RegionState", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<State>("DmpModel.FK_RegionState", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "RegionSpecialScheme", "SpecialScheme")]
        public EntityCollection<SpecialScheme> SpecialSchemes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecialScheme>("DmpModel.RegionSpecialScheme", "SpecialScheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecialScheme>("DmpModel.RegionSpecialScheme", "SpecialScheme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "RegionUserRegionMap", "UserRegionMap")]
        public EntityCollection<UserRegionMap> UserRegionMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRegionMap>("DmpModel.RegionUserRegionMap", "UserRegionMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRegionMap>("DmpModel.RegionUserRegionMap", "UserRegionMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="SpecialScheme")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecialScheme : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecialScheme object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="monthId">Initial value of the MonthId property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="dealerId">Initial value of the DealerId property.</param>
        public static SpecialScheme CreateSpecialScheme(global::System.Int32 id, global::System.String name, ObjectInfo objectInfo, global::System.Int32 regionId, global::System.Int32 monthId, global::System.Int32 stateId, global::System.Int32 dealerId)
        {
            SpecialScheme specialScheme = new SpecialScheme();
            specialScheme.Id = id;
            specialScheme.Name = name;
            specialScheme.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            specialScheme.RegionId = regionId;
            specialScheme.MonthId = monthId;
            specialScheme.StateId = stateId;
            specialScheme.DealerId = dealerId;
            return specialScheme;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private global::System.Int32 _RegionId;
        partial void OnRegionIdChanging(global::System.Int32 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthId
        {
            get
            {
                return _MonthId;
            }
            set
            {
                OnMonthIdChanging(value);
                ReportPropertyChanging("MonthId");
                _MonthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthId");
                OnMonthIdChanged();
            }
        }
        private global::System.Int32 _MonthId;
        partial void OnMonthIdChanging(global::System.Int32 value);
        partial void OnMonthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealerId
        {
            get
            {
                return _DealerId;
            }
            set
            {
                OnDealerIdChanging(value);
                ReportPropertyChanging("DealerId");
                _DealerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerId");
                OnDealerIdChanged();
            }
        }
        private global::System.Int32 _DealerId;
        partial void OnDealerIdChanging(global::System.Int32 value);
        partial void OnDealerIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "RegionSpecialScheme", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DmpModel.RegionSpecialScheme", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DmpModel.RegionSpecialScheme", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DmpModel.RegionSpecialScheme", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("DmpModel.RegionSpecialScheme", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "MonthSpecialScheme", "Month")]
        public Month Month
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthSpecialScheme", "Month").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthSpecialScheme", "Month").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Month> MonthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.MonthSpecialScheme", "Month");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Month>("DmpModel.MonthSpecialScheme", "Month", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="SpecialSchemeIncentive")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecialSchemeIncentive : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecialSchemeIncentive object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="incentiveId">Initial value of the IncentiveId property.</param>
        /// <param name="specialIncentive">Initial value of the SpecialIncentive property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="specialSchemeId">Initial value of the SpecialSchemeId property.</param>
        public static SpecialSchemeIncentive CreateSpecialSchemeIncentive(global::System.Int32 id, global::System.Int32 incentiveId, global::System.Double specialIncentive, ObjectInfo objectInfo, global::System.Int32 specialSchemeId)
        {
            SpecialSchemeIncentive specialSchemeIncentive = new SpecialSchemeIncentive();
            specialSchemeIncentive.Id = id;
            specialSchemeIncentive.IncentiveId = incentiveId;
            specialSchemeIncentive.SpecialIncentive = specialIncentive;
            specialSchemeIncentive.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            specialSchemeIncentive.SpecialSchemeId = specialSchemeId;
            return specialSchemeIncentive;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IncentiveId
        {
            get
            {
                return _IncentiveId;
            }
            set
            {
                OnIncentiveIdChanging(value);
                ReportPropertyChanging("IncentiveId");
                _IncentiveId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncentiveId");
                OnIncentiveIdChanged();
            }
        }
        private global::System.Int32 _IncentiveId;
        partial void OnIncentiveIdChanging(global::System.Int32 value);
        partial void OnIncentiveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SpecialIncentive
        {
            get
            {
                return _SpecialIncentive;
            }
            set
            {
                OnSpecialIncentiveChanging(value);
                ReportPropertyChanging("SpecialIncentive");
                _SpecialIncentive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialIncentive");
                OnSpecialIncentiveChanged();
            }
        }
        private global::System.Double _SpecialIncentive;
        partial void OnSpecialIncentiveChanging(global::System.Double value);
        partial void OnSpecialIncentiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpecialSchemeId
        {
            get
            {
                return _SpecialSchemeId;
            }
            set
            {
                OnSpecialSchemeIdChanging(value);
                ReportPropertyChanging("SpecialSchemeId");
                _SpecialSchemeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialSchemeId");
                OnSpecialSchemeIdChanged();
            }
        }
        private global::System.Int32 _SpecialSchemeId;
        partial void OnSpecialSchemeIdChanging(global::System.Int32 value);
        partial void OnSpecialSchemeIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "IncentiveSpecialSchemeIncentive", "Incentive")]
        public Incentive Incentive
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Incentive>("DmpModel.IncentiveSpecialSchemeIncentive", "Incentive").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Incentive>("DmpModel.IncentiveSpecialSchemeIncentive", "Incentive").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Incentive> IncentiveReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Incentive>("DmpModel.IncentiveSpecialSchemeIncentive", "Incentive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Incentive>("DmpModel.IncentiveSpecialSchemeIncentive", "Incentive", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        public static State CreateState(global::System.Int32 id, global::System.String name, global::System.Int32 regionId, ObjectInfo objectInfo)
        {
            State state = new State();
            state.Id = id;
            state.Name = name;
            state.RegionId = regionId;
            state.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            return state;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private global::System.Int32 _RegionId;
        partial void OnRegionIdChanging(global::System.Int32 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_RegionState", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DmpModel.FK_RegionState", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DmpModel.FK_RegionState", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DmpModel.FK_RegionState", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("DmpModel.FK_RegionState", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_StateDealer", "Dealer")]
        public EntityCollection<Dealer> Dealers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dealer>("DmpModel.FK_StateDealer", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dealer>("DmpModel.FK_StateDealer", "Dealer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="Target")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Target : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Target object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="monthId">Initial value of the MonthId property.</param>
        /// <param name="dealerManpowerId">Initial value of the DealerManpowerId property.</param>
        /// <param name="actual">Initial value of the Actual property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="target1">Initial value of the Target1 property.</param>
        /// <param name="target2">Initial value of the Target2 property.</param>
        /// <param name="productVarientId">Initial value of the ProductVarientId property.</param>
        public static Target CreateTarget(global::System.Int32 id, global::System.Int32 monthId, global::System.Int32 dealerManpowerId, global::System.Int32 actual, ObjectInfo objectInfo, global::System.Int32 target1, global::System.Int32 target2, global::System.Int32 productVarientId)
        {
            Target target = new Target();
            target.Id = id;
            target.MonthId = monthId;
            target.DealerManpowerId = dealerManpowerId;
            target.Actual = actual;
            target.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            target.Target1 = target1;
            target.Target2 = target2;
            target.ProductVarientId = productVarientId;
            return target;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthId
        {
            get
            {
                return _MonthId;
            }
            set
            {
                OnMonthIdChanging(value);
                ReportPropertyChanging("MonthId");
                _MonthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthId");
                OnMonthIdChanged();
            }
        }
        private global::System.Int32 _MonthId;
        partial void OnMonthIdChanging(global::System.Int32 value);
        partial void OnMonthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealerManpowerId
        {
            get
            {
                return _DealerManpowerId;
            }
            set
            {
                OnDealerManpowerIdChanging(value);
                ReportPropertyChanging("DealerManpowerId");
                _DealerManpowerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerManpowerId");
                OnDealerManpowerIdChanged();
            }
        }
        private global::System.Int32 _DealerManpowerId;
        partial void OnDealerManpowerIdChanging(global::System.Int32 value);
        partial void OnDealerManpowerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Actual
        {
            get
            {
                return _Actual;
            }
            set
            {
                OnActualChanging(value);
                ReportPropertyChanging("Actual");
                _Actual = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Actual");
                OnActualChanged();
            }
        }
        private global::System.Int32 _Actual;
        partial void OnActualChanging(global::System.Int32 value);
        partial void OnActualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Target1
        {
            get
            {
                return _Target1;
            }
            set
            {
                OnTarget1Changing(value);
                ReportPropertyChanging("Target1");
                _Target1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Target1");
                OnTarget1Changed();
            }
        }
        private global::System.Int32 _Target1;
        partial void OnTarget1Changing(global::System.Int32 value);
        partial void OnTarget1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Target2
        {
            get
            {
                return _Target2;
            }
            set
            {
                OnTarget2Changing(value);
                ReportPropertyChanging("Target2");
                _Target2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Target2");
                OnTarget2Changed();
            }
        }
        private global::System.Int32 _Target2;
        partial void OnTarget2Changing(global::System.Int32 value);
        partial void OnTarget2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductVarientId
        {
            get
            {
                return _ProductVarientId;
            }
            set
            {
                OnProductVarientIdChanging(value);
                ReportPropertyChanging("ProductVarientId");
                _ProductVarientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductVarientId");
                OnProductVarientIdChanged();
            }
        }
        private global::System.Int32 _ProductVarientId;
        partial void OnProductVarientIdChanging(global::System.Int32 value);
        partial void OnProductVarientIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_DealerManpowerTarget", "DealerManpower")]
        public DealerManpower DealerManpower
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.FK_DealerManpowerTarget", "DealerManpower").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.FK_DealerManpowerTarget", "DealerManpower").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealerManpower> DealerManpowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.FK_DealerManpowerTarget", "DealerManpower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealerManpower>("DmpModel.FK_DealerManpowerTarget", "DealerManpower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "FK_MonthTarget", "Month")]
        public Month Month
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.FK_MonthTarget", "Month").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.FK_MonthTarget", "Month").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Month> MonthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("DmpModel.FK_MonthTarget", "Month");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Month>("DmpModel.FK_MonthTarget", "Month", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "ProductVarientTarget", "ProductVarient")]
        public ProductVarient ProductVarient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductVarient>("DmpModel.ProductVarientTarget", "ProductVarient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductVarient>("DmpModel.ProductVarientTarget", "ProductVarient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductVarient> ProductVarientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductVarient>("DmpModel.ProductVarientTarget", "ProductVarient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductVarient>("DmpModel.ProductVarientTarget", "ProductVarient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="Training")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Training : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Training object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="designation">Initial value of the Designation property.</param>
        public static Training CreateTraining(global::System.Int32 id, global::System.String name, global::System.String code, ObjectInfo objectInfo, global::System.String designation)
        {
            Training training = new Training();
            training.Id = id;
            training.Name = name;
            training.Code = code;
            training.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            training.Designation = designation;
            return training;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "TrainingTrainingProfileMap", "TrainingProfileMap")]
        public EntityCollection<TrainingProfileMap> TrainingProfileMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrainingProfileMap>("DmpModel.TrainingTrainingProfileMap", "TrainingProfileMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrainingProfileMap>("DmpModel.TrainingTrainingProfileMap", "TrainingProfileMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="TrainingProfileMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrainingProfileMap : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrainingProfileMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dealerManpowerId">Initial value of the DealerManpowerId property.</param>
        /// <param name="trainingId">Initial value of the TrainingId property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        public static TrainingProfileMap CreateTrainingProfileMap(global::System.Int32 id, global::System.Int32 dealerManpowerId, global::System.Int32 trainingId, ObjectInfo objectInfo)
        {
            TrainingProfileMap trainingProfileMap = new TrainingProfileMap();
            trainingProfileMap.Id = id;
            trainingProfileMap.DealerManpowerId = dealerManpowerId;
            trainingProfileMap.TrainingId = trainingId;
            trainingProfileMap.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            return trainingProfileMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealerManpowerId
        {
            get
            {
                return _DealerManpowerId;
            }
            set
            {
                OnDealerManpowerIdChanging(value);
                ReportPropertyChanging("DealerManpowerId");
                _DealerManpowerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerManpowerId");
                OnDealerManpowerIdChanged();
            }
        }
        private global::System.Int32 _DealerManpowerId;
        partial void OnDealerManpowerIdChanging(global::System.Int32 value);
        partial void OnDealerManpowerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingId
        {
            get
            {
                return _TrainingId;
            }
            set
            {
                OnTrainingIdChanging(value);
                ReportPropertyChanging("TrainingId");
                _TrainingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrainingId");
                OnTrainingIdChanged();
            }
        }
        private global::System.Int32 _TrainingId;
        partial void OnTrainingIdChanging(global::System.Int32 value);
        partial void OnTrainingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastTrainingDate
        {
            get
            {
                return _LastTrainingDate;
            }
            set
            {
                OnLastTrainingDateChanging(value);
                ReportPropertyChanging("LastTrainingDate");
                _LastTrainingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastTrainingDate");
                OnLastTrainingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastTrainingDate;
        partial void OnLastTrainingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastTrainingDateChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerManpowerTrainingProfileMap", "DealerManpower")]
        public DealerManpower DealerManpower
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerTrainingProfileMap", "DealerManpower").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerTrainingProfileMap", "DealerManpower").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealerManpower> DealerManpowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealerManpower>("DmpModel.DealerManpowerTrainingProfileMap", "DealerManpower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealerManpower>("DmpModel.DealerManpowerTrainingProfileMap", "DealerManpower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "TrainingTrainingProfileMap", "Training")]
        public Training Training
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Training>("DmpModel.TrainingTrainingProfileMap", "Training").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Training>("DmpModel.TrainingTrainingProfileMap", "Training").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Training> TrainingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Training>("DmpModel.TrainingTrainingProfileMap", "Training");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Training>("DmpModel.TrainingTrainingProfileMap", "Training", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name, global::System.String email, global::System.String role, global::System.Int32 parentId, ObjectInfo objectInfo)
        {
            User user = new User();
            user.Id = id;
            user.Name = name;
            user.Email = email;
            user.Role = role;
            user.ParentId = parentId;
            user.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private global::System.Int32 _ParentId;
        partial void OnParentIdChanging(global::System.Int32 value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "UserDealerManpower", "DealerManpower")]
        public EntityCollection<DealerManpower> DealerManpowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealerManpower>("DmpModel.UserDealerManpower", "DealerManpower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealerManpower>("DmpModel.UserDealerManpower", "DealerManpower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "UserDealerManpowerTargets", "DealerManpowerTargets")]
        public EntityCollection<DealerManpowerTargets> DealerManpowerTargets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealerManpowerTargets>("DmpModel.UserDealerManpowerTargets", "DealerManpowerTargets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealerManpowerTargets>("DmpModel.UserDealerManpowerTargets", "DealerManpowerTargets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "UserUserDealerMap", "UserDealerMap")]
        public EntityCollection<UserDealerMap> UserDealerMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserDealerMap>("DmpModel.UserUserDealerMap", "UserDealerMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserDealerMap>("DmpModel.UserUserDealerMap", "UserDealerMap", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "UserUserRegionMap", "UserRegionMap")]
        public EntityCollection<UserRegionMap> UserRegionMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRegionMap>("DmpModel.UserUserRegionMap", "UserRegionMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRegionMap>("DmpModel.UserUserRegionMap", "UserRegionMap", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "UserDsmDseTargetMap", "DsmDseTargetMap")]
        public EntityCollection<DsmDseTargetMap> DsmDseTargetMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DsmDseTargetMap>("DmpModel.UserDsmDseTargetMap", "DsmDseTargetMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DsmDseTargetMap>("DmpModel.UserDsmDseTargetMap", "DsmDseTargetMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="UserDealerMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserDealerMap : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserDealerMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="dealerId">Initial value of the DealerId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserDealerMap CreateUserDealerMap(global::System.Int32 id, ObjectInfo objectInfo, global::System.Int32 dealerId, global::System.Int32 userId)
        {
            UserDealerMap userDealerMap = new UserDealerMap();
            userDealerMap.Id = id;
            userDealerMap.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            userDealerMap.DealerId = dealerId;
            userDealerMap.UserId = userId;
            return userDealerMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealerId
        {
            get
            {
                return _DealerId;
            }
            set
            {
                OnDealerIdChanging(value);
                ReportPropertyChanging("DealerId");
                _DealerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerId");
                OnDealerIdChanged();
            }
        }
        private global::System.Int32 _DealerId;
        partial void OnDealerIdChanging(global::System.Int32 value);
        partial void OnDealerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "DealerUserDealerMap", "Dealer")]
        public Dealer Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("DmpModel.DealerUserDealerMap", "Dealer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("DmpModel.DealerUserDealerMap", "Dealer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealer> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("DmpModel.DealerUserDealerMap", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealer>("DmpModel.DealerUserDealerMap", "Dealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "UserUserDealerMap", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserUserDealerMap", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserUserDealerMap", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserUserDealerMap", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DmpModel.UserUserDealerMap", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DmpModel", Name="UserRegionMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRegionMap : EntityObject,IObjectInfo
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRegionMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="objectInfo">Initial value of the ObjectInfo property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserRegionMap CreateUserRegionMap(global::System.Int32 id, ObjectInfo objectInfo, global::System.Int32 regionId, global::System.Int32 userId)
        {
            UserRegionMap userRegionMap = new UserRegionMap();
            userRegionMap.Id = id;
            userRegionMap.ObjectInfo = StructuralObject.VerifyComplexObjectIsNotNull(objectInfo, "ObjectInfo");
            userRegionMap.RegionId = regionId;
            userRegionMap.UserId = userId;
            return userRegionMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private global::System.Int32 _RegionId;
        partial void OnRegionIdChanging(global::System.Int32 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ObjectInfo ObjectInfo
        {
            get
            {
                _ObjectInfo = GetValidValue(_ObjectInfo, "ObjectInfo", false, _ObjectInfoInitialized);
                _ObjectInfoInitialized = true;
                return _ObjectInfo;
            }
            set
            {
                OnObjectInfoChanging(value);
                ReportPropertyChanging("ObjectInfo");
                _ObjectInfo = SetValidValue(_ObjectInfo, value, "ObjectInfo");
                _ObjectInfoInitialized = true;
                ReportPropertyChanged("ObjectInfo");
                OnObjectInfoChanged();
            }
        }
        private ObjectInfo _ObjectInfo;
        private bool _ObjectInfoInitialized;
        partial void OnObjectInfoChanging(ObjectInfo value);
        partial void OnObjectInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "RegionUserRegionMap", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DmpModel.RegionUserRegionMap", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DmpModel.RegionUserRegionMap", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DmpModel.RegionUserRegionMap", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("DmpModel.RegionUserRegionMap", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DmpModel", "UserUserRegionMap", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserUserRegionMap", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserUserRegionMap", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DmpModel.UserUserRegionMap", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DmpModel.UserUserRegionMap", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DmpModel", Name="ObjectInfo")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ObjectInfo : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectInfo object.
        /// </summary>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static ObjectInfo CreateObjectInfo(global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            ObjectInfo objectInfo = new ObjectInfo();
            objectInfo.CreatedDate = createdDate;
            objectInfo.ModifiedDate = modifiedDate;
            return objectInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedDate
        {
            get
            {
                return _DeletedDate;
            }
            set
            {
                OnDeletedDateChanging(value);
                ReportPropertyChanging("DeletedDate");
                _DeletedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedDate");
                OnDeletedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedDate;
        partial void OnDeletedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedDateChanged();

        #endregion

    }

    #endregion

    
}

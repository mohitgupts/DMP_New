@model DMP.ModelsView.UserViewModel
@using DMP.Utils
<script src = "@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src = "@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        setDefault();
        $('#ddlRole').bind('change', function () {
            var role = $('#ddlRole option:selected').text();
            if (role == "RM") {
                $('#dvRegion').show();
            } else {
                $('#dvRegion').hide();
            }
            if (role != '' && role != 'HQ' && role != "HQR") {
                $.post("/Account/GetUsersFromRole", { role: role }, function (res) {
                    if (res.success) {
                        var str = '';
                        for (var i = 0; i < res.users.length; i++) {
                            var item = res.users[i];
                            str += '<option value="' + item.Key + '">' + item.Value + '</option>';
                        }
                        $('#ddlParent').html(str).trigger('update');
                        $('#dvParent').show();
                    }
                });
            } else {
                $('#dvParent').hide();
            }
        });

        $('#btnSubmit').bind('click', function(e) {
            var id = $('#hidUserId').val();
            if(id <= 0) {
                 if(!validation()) {
                    e.preventDefault();
                }
            }
        });
        
        function setDefault() {
            var role = $('#ddlRole option:selected').text();
            if(@(Model.User.RegionId) > 0 || role == "RM") {
                $('#dvRegion').show();
            }else {
                $('#dvRegion').hide();
            }
        }
        
        function validation() {
            $('#txtUserPwd').removeClass('inputError');
            $('#pwdMsg').html('').hide();
            $('#txtUserCnfPwd').removeClass('inputError');
            $('#cnfPwdMsg').html('').hide();
            var pwd = $('#txtUserPwd').val();
            var cnfPwd = $('#txtUserCnfPwd').val();
            if(pwd.indexOf(' ') >= 0) {
                $('#txtUserPwd').addClass('inputError');
                $('#pwdMsg').html('Password is not in correct format').show();
                return false;
            }
            if(pwd.length < 6) {
                $('#txtUserPwd').addClass('inputError');
                $('#pwdMsg').html('Password must be of min 6 characters').show();
                return false;
            }else if(pwd.toLowerCase().trim() != cnfPwd.toLowerCase().trim()) {
                $('#txtUserCnfPwd').addClass('inputError');
                $('#cnfPwdMsg').html('Password not matched').show();
                return false;
            }
            return true;
        }
    });
</script>
<div class="span8">
    @using (Ajax.BeginForm(new AjaxOptions { OnComplete = "closePopUp()", OnSuccess = "reLoad('/Account/Users')" })) {
        <div style="width: 100%">
            @Html.HiddenFor(x => x.User.Id, new { @id = "hidUserId" })
            <div class="span3">
                @Html.LabelFor(x => x.User.Role)
                @Html.DropDownListFor(x => x.User.Role, new SelectList(Model.Roles, "Key", "Value"), new { @id = "ddlRole" })
            </div>
            <div id="dvParent" class="span3">
                @Html.LabelFor(x => x.User.ParentId)
                @Html.DropDownListFor(x => x.User.ParentId, new SelectList(Model.ParentUsers, "Key", "Value"), new { @id = "ddlParent" })
            </div>
            @if (Model.Regions.Any()) {
                <div id="dvRegion" style="display: none" class="span3">
                    @Html.LabelFor(x => x.User.RegionId)
                    @Html.DropDownListFor(x => x.User.RegionId, new SelectList(Model.Regions, "Key", "Value"), new { @id = "ddlRegion" })
                </div>
            }
            <div class="span3">
                @Html.LabelFor(x => x.User.Name)
                @Html.TextBoxFor(x => x.User.Name, new { @id = "txtUserName" })
            </div>
            @if (Model.User.Id <= 0) {
                <div class="span3">
                    @Html.LabelFor(x => x.User.Email)
                    @Html.TextBoxFor(x => x.User.Email, new { @id = "txtUserEmail" })
                </div>
                <div class="span3">
                    @Html.LabelFor(x => x.User.Password)
                    @Html.PasswordFor(x => x.User.Password, new { @id = "txtUserPwd" })
                    <span id="pwdMsg" style="display: none; color: red; font-size: 12px;"></span>
                </div>
                <div class="span3">
                    @Html.LabelFor(x => x.User.ConfirmPassword)
                    @Html.PasswordFor(x => x.User.ConfirmPassword, new { @id = "txtUserCnfPwd" })
                    <span id="cnfPwdMsg" style="display: none; color: red; font-size: 12px;"></span>
                </div>
            } else {
                @Html.HiddenFor(x => x.User.Email)
                @Html.HiddenFor(x => x.User.Password)
                @Html.HiddenFor(x => x.User.ConfirmPassword)
            }
            <div class="span3">
                @Html.LabelFor(x => x.User.Description)
                @Html.TextBoxFor(x => x.User.Description, new { @id = "txtUserDescription" })
            </div>
            <div class="span6">
                <input type="submit" value="Save" class="btn btn-primary" id="btnSubmit" />
                <input type="reset" value="Reset" class="btn btn-primary" />
            </div>
        </div>
    }
</div>
